syntax = "proto3";

option go_package = "./coord";

package coord;

service VehicleDiscovery {
  rpc RegisterVehicle(RegisterVehicleRequest) returns (RegisterVehicleResponse);
  rpc ListRegisteredVehicles(ListRegisteredVehiclesRequest) returns (ListRegisteredVehiclesResponse);
}

service CoordinationService {
  // rpc RegisterVehicle(RegisterVehicleRequest) returns (RegisterVehicleResponse);
  rpc UpdateVehicleStatus(UpdateVehicleStatusRequest) returns (UpdateVehicleStatusResponse);
  rpc GetInstructions(GetInstructionsRequest) returns (GetInstructionsResponse);
  rpc ElectLeader(ElectLeaderRequest) returns (ElectLeaderResponse);
}

message ListRegisteredVehiclesRequest {}

message ListRegisteredVehiclesResponse {
  repeated Vehicle vehicles = 1;
}

message RegisterVehicleRequest {
  Vehicle vehicle = 1;
}

message RegisterVehicleResponse {
  bool success = 1;
  string message = 2;
}

message UpdateVehicleStatusRequest {
  Vehicle vehicle = 1;
}

message UpdateVehicleStatusResponse {
  bool success = 1;
  string message = 2;
}

message GetInstructionsRequest {
  string vehicle_address = 1;
  int64 logical_time = 2;
}

message GetInstructionsResponse {
  string instruction = 1; // e.g., proceed, stop
  int64 logical_time = 2;
}

message ElectLeaderRequest {
  string requester_address = 1;
  string requester_id = 2;
  int64 logical_time = 3;
}

message ElectLeaderResponse {
  string leader_address = 1;
  string leader_id = 2;
  int64 leader_time = 3;
}

message Vehicle {
  string name = 1;
  string address = 2;
  int64 PosX = 3;
  int64 PosY = 4;
  int64 logical_time = 5;
  bool is_leader = 6;
  string id = 7;
}
