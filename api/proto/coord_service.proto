syntax = "proto3";

option go_package = "./coord";

package coord;

service CoordinationService {
  rpc RegisterVehicle(RegisterVehicleRequest) returns (RegisterVehicleResponse);
  rpc UpdateVehicleStatus(UpdateVehicleStatusRequest) returns (UpdateVehicleStatusResponse);
  rpc GetInstructions(GetInstructionsRequest) returns (GetInstructionsResponse);
  rpc SyncLogicalClock(SyncLogicalClockRequest) returns (SyncLogicalClockResponse);
  rpc ElectLeader(ElectLeaderRequest) returns (ElectLeaderResponse);
}

message RegisterVehicleRequest {
  string vehicle_id = 1;
  string vehicle_type = 2; // e.g., car, truck, bike
}

message RegisterVehicleResponse {
  bool success = 1;
  string message = 2;
}

message UpdateVehicleStatusRequest {
  string vehicle_id = 1;
  double latitude = 2;
  double longitude = 3;
  string intention = 4; // e.g., turn_left, go_straight
  int64 logical_time = 5; // Lamport
}

message UpdateVehicleStatusResponse {
  bool success = 1;
  string message = 2;
  int64 logical_time = 3;
}

message GetInstructionsRequest {
  string vehicle_id = 1;
  int64 logical_time = 2;
}

message GetInstructionsResponse {
  string instruction = 1; // e.g., proceed, stop
  int64 logical_time = 2;
}

message SyncLogicalClockRequest {
  string vehicle_id = 1;
  int64 local_time = 2;
}

message SyncLogicalClockResponse {
  int64 updated_time = 1;
}

message ElectLeaderRequest {
  string vehicle_id = 1;
  int64 logical_time = 2;
}

message ElectLeaderResponse {
  string leader_id = 1;
  int64 leader_time = 2;
}

//service Greeter {
//    rpc SayHello (HelloRequest) returns (HelloReply) {}
//}
//
//message HelloRequest {
//    string name = 1;
//}
//
//message HelloReply {
//    string message = 1;
//}
